#include<stdio.h>

int main()
{
    int A[10][10], transpose[10][10], i, j, row, colum;

    printf("Enter the number of rows and columns of the matrix A (must be equal):\n");
    scanf("%d %d", &row, &colum);

    if(row != colum)
    {
        printf("Rotation is only possible for square matrices.\n");
        return 0;
    }

    // Input matrix A
    for(i = 0; i < row; i++)
    {
        for(j = 0; j < colum; j++)
        {
            printf("Enter A[%d][%d] = ", i, j);
            scanf("%d", &A[i][j]);
        }
    }

    // Step 1: Transpose the matrix
    for(i = 0; i < row; i++)
    {
        for(j = 0; j < colum; j++)
        {
            transpose[j][i] = A[i][j];
        }
    }

    // Step 2: Reverse each row of the transposed matrix
    for(i = 0; i < row; i++)
    {
        for(j = 0; j < colum / 2; j++)
        {
            int temp = transpose[i][j];
            transpose[i][j] = transpose[i][colum - 1 - j];
            transpose[i][colum - 1 - j] = temp;
        }
    }

    // Output the original matrix
    printf("Matrix A:\n");
    for(i = 0; i < row; i++)
    {
        for(j = 0; j < colum; j++)
        {
            printf("%d ", A[i][j]);
        }
        printf("\n");
    }

    // Output the rotated matrix
    printf("Rotated Matrix (90 degrees clockwise):\n");
    for(i = 0; i < row; i++)
    {
        for(j = 0; j < colum; j++)
        {
            printf("%d ", transpose[i][j]);
        }
        printf("\n");
    }

    getch(); // Use return 0; if getch() is not available
}

